/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int maxDepth(TreeNode* root) {
     
        
        
        if(root ==NULL)
        {
            return 0;
        }
        int l = maxDepth(root->left);
        int h= maxDepth(root->right);
        return  1+ max(l,h);
    }
    bool isBalanced(TreeNode* root) {
        if(root == NULL)
        {
            return true;
            
        }
         bool left = isBalanced(root->left);
        bool right = isBalanced(root->right);
        
        
        bool diff = abs (maxDepth(root->left) - maxDepth(root->right)  ) <=1;
        if(left && right && diff)
        {
            return true;
        }
        else
        {
            return false;
        }
        
    }
};
